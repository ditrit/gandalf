// Code generated by protoc-gen-go. DO NOT EDIT.
// source: connector.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommandList struct {
	Version              string   `protobuf:"bytes,1,opt,name=Version,proto3" json:"Version,omitempty"`
	Commands             []string `protobuf:"bytes,2,rep,name=Commands,proto3" json:"Commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandList) Reset()         { *m = CommandList{} }
func (m *CommandList) String() string { return proto.CompactTextString(m) }
func (*CommandList) ProtoMessage()    {}
func (*CommandList) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{0}
}

func (m *CommandList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandList.Unmarshal(m, b)
}
func (m *CommandList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandList.Marshal(b, m, deterministic)
}
func (m *CommandList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandList.Merge(m, src)
}
func (m *CommandList) XXX_Size() int {
	return xxx_messageInfo_CommandList.Size(m)
}
func (m *CommandList) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandList.DiscardUnknown(m)
}

var xxx_messageInfo_CommandList proto.InternalMessageInfo

func (m *CommandList) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *CommandList) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type IteratorMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IteratorMessage) Reset()         { *m = IteratorMessage{} }
func (m *IteratorMessage) String() string { return proto.CompactTextString(m) }
func (*IteratorMessage) ProtoMessage()    {}
func (*IteratorMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a0c0da548590a25, []int{2}
}

func (m *IteratorMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IteratorMessage.Unmarshal(m, b)
}
func (m *IteratorMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IteratorMessage.Marshal(b, m, deterministic)
}
func (m *IteratorMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IteratorMessage.Merge(m, src)
}
func (m *IteratorMessage) XXX_Size() int {
	return xxx_messageInfo_IteratorMessage.Size(m)
}
func (m *IteratorMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_IteratorMessage.DiscardUnknown(m)
}

var xxx_messageInfo_IteratorMessage proto.InternalMessageInfo

func (m *IteratorMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CommandList)(nil), "grpc.CommandList")
	proto.RegisterType((*Empty)(nil), "grpc.Empty")
	proto.RegisterType((*IteratorMessage)(nil), "grpc.IteratorMessage")
}

func init() {
	proto.RegisterFile("connector.proto", fileDescriptor_9a0c0da548590a25)
}

var fileDescriptor_9a0c0da548590a25 = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x4f, 0x4b, 0xc4, 0x30,
	0x14, 0xc4, 0x6d, 0xfd, 0xb3, 0xf6, 0x2d, 0x6c, 0x31, 0xa7, 0xb2, 0x78, 0x58, 0x7b, 0xda, 0x53,
	0x10, 0xfb, 0x05, 0xa4, 0xc5, 0x43, 0x41, 0xa1, 0x54, 0xf0, 0x1e, 0x93, 0x58, 0x22, 0x26, 0xaf,
	0x24, 0x0f, 0xc1, 0x6f, 0x2f, 0xfd, 0x4b, 0x8f, 0x33, 0x0c, 0x33, 0xbf, 0x81, 0x54, 0xa2, 0x73,
	0x5a, 0x12, 0x7a, 0xde, 0x7b, 0x24, 0x64, 0x57, 0x9d, 0xef, 0x65, 0x5e, 0xc1, 0xbe, 0x42, 0x6b,
	0x85, 0x53, 0xaf, 0x26, 0x10, 0xcb, 0x60, 0xf7, 0xa1, 0x7d, 0x30, 0xe8, 0xb2, 0xe8, 0x14, 0x9d,
	0x93, 0x76, 0x91, 0xec, 0x08, 0xb7, 0x73, 0x30, 0x64, 0xf1, 0xe9, 0xf2, 0x9c, 0xb4, 0xab, 0xce,
	0x77, 0x70, 0xfd, 0x62, 0x7b, 0xfa, 0xcb, 0x1f, 0x20, 0xad, 0x49, 0x7b, 0x41, 0xe8, 0xdf, 0x74,
	0x08, 0xa2, 0xd3, 0xec, 0x00, 0x71, 0xad, 0xe6, 0xb2, 0xb8, 0x56, 0x4f, 0xcf, 0x90, 0x54, 0x0b,
	0x09, 0x2b, 0x20, 0x7d, 0xd7, 0x4e, 0x6d, 0x09, 0xee, 0xf8, 0xc0, 0xc5, 0x37, 0xd6, 0x71, 0x3f,
	0x59, 0xd3, 0xc4, 0x45, 0xf9, 0x08, 0xf7, 0x12, 0x2d, 0x57, 0x86, 0xbc, 0x21, 0xde, 0x09, 0xa7,
	0xc4, 0xcf, 0x17, 0xff, 0x16, 0xbf, 0x62, 0xcc, 0x95, 0x87, 0xb5, 0xbf, 0x19, 0x8e, 0x36, 0xd1,
	0xe7, 0xcd, 0xf8, 0xb8, 0xf8, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xec, 0x4f, 0x07, 0xaa, 0x04, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConnectorClient is the client API for Connector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectorClient interface {
	SendCommandList(ctx context.Context, in *CommandList, opts ...grpc.CallOption) (*Empty, error)
}

type connectorClient struct {
	cc grpc.ClientConnInterface
}

func NewConnectorClient(cc grpc.ClientConnInterface) ConnectorClient {
	return &connectorClient{cc}
}

func (c *connectorClient) SendCommandList(ctx context.Context, in *CommandList, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/grpc.Connector/SendCommandList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectorServer is the server API for Connector service.
type ConnectorServer interface {
	SendCommandList(context.Context, *CommandList) (*Empty, error)
}

// UnimplementedConnectorServer can be embedded to have forward compatible implementations.
type UnimplementedConnectorServer struct {
}

func (*UnimplementedConnectorServer) SendCommandList(ctx context.Context, req *CommandList) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCommandList not implemented")
}

func RegisterConnectorServer(s *grpc.Server, srv ConnectorServer) {
	s.RegisterService(&_Connector_serviceDesc, srv)
}

func _Connector_SendCommandList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectorServer).SendCommandList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.Connector/SendCommandList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectorServer).SendCommandList(ctx, req.(*CommandList))
	}
	return interceptor(ctx, in, info, handler)
}

var _Connector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.Connector",
	HandlerType: (*ConnectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendCommandList",
			Handler:    _Connector_SendCommandList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connector.proto",
}
